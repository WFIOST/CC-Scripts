local a=dofile"/rom/modules/main/cc/expect.lua"setmetatable(a,{__call=function(b,...)return a.expect(...)end})local c={}local d="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"local e={[1]=0,[2]=keys.one,[3]=keys.two,[4]=keys.three,[5]=keys.four,[6]=keys.five,[7]=keys.six,[8]=keys.seven,[9]=keys.eight,[10]=keys.nine,[11]=keys.zero,[12]=keys.minus,[13]=keys.equals,[14]=keys.backspace,[15]=keys.tab,[16]=keys.q,[17]=keys.w,[18]=keys.e,[19]=keys.r,[20]=keys.t,[21]=keys.y,[22]=keys.u,[23]=keys.i,[24]=keys.o,[25]=keys.p,[26]=keys.leftBracket,[27]=keys.rightBracket,[28]=keys.enter,[29]=keys.leftCtrl,[30]=keys.a,[31]=keys.s,[32]=keys.d,[33]=keys.f,[34]=keys.g,[35]=keys.h,[36]=keys.j,[37]=keys.k,[38]=keys.l,[39]=keys.semiColon,[40]=keys.apostrophe,[41]=keys.grave,[42]=keys.leftShift,[43]=keys.backslash,[44]=keys.z,[45]=keys.x,[46]=keys.c,[47]=keys.v,[48]=keys.b,[49]=keys.n,[50]=keys.m,[51]=keys.comma,[52]=keys.period,[53]=keys.slash,[54]=keys.rightShift,[55]=keys.multiply,[56]=keys.leftAlt,[57]=keys.space,[58]=keys.capsLock,[59]=keys.f1,[60]=keys.f2,[61]=keys.f3,[62]=keys.f4,[63]=keys.f5,[64]=keys.f6,[65]=keys.f7,[66]=keys.f8,[67]=keys.f9,[68]=keys.f10,[69]=keys.numLock,[70]=keys.scrollLock,[71]=keys.numPad7,[72]=keys.numPad8,[73]=keys.numPad9,[74]=keys.numPadSubtract,[75]=keys.numPad4,[76]=keys.numPad5,[77]=keys.numPad6,[78]=keys.numPadAdd,[79]=keys.numPad1,[80]=keys.numPad2,[81]=keys.numPad3,[82]=keys.numPad0,[83]=keys.numPadDecimal,[87]=keys.f11,[88]=keys.f12,[100]=keys.f13,[101]=keys.f14,[102]=keys.f15,[111]=keys.kana,[121]=keys.convert,[123]=keys.noconvert,[125]=keys.yen,[141]=keys.numPadEquals,[144]=keys.cimcumflex,[145]=keys.at,[146]=keys.colon,[147]=keys.underscore,[148]=keys.kanji,[149]=keys.stop,[150]=keys.ax,[156]=keys.numPadEnter,[157]=keys.rightCtrl,[179]=keys.numPadComma,[181]=keys.numPadDivide,[184]=keys.rightAlt,[197]=keys.pause,[199]=keys.home,[200]=keys.up,[201]=keys.pageUp,[203]=keys.left,[205]=keys.right,[207]=keys["end"],[208]=keys.down,[209]=keys.pageDown,[210]=keys.insert,[211]=keys.delete}local f={[0]=1,[keys.one]=2,[keys.two]=3,[keys.three]=4,[keys.four]=5,[keys.five]=6,[keys.six]=7,[keys.seven]=8,[keys.eight]=9,[keys.nine]=10,[keys.zero]=11,[keys.minus]=12,[keys.equals]=13,[keys.backspace]=14,[keys.tab]=15,[keys.q]=16,[keys.w]=17,[keys.e]=18,[keys.r]=19,[keys.t]=20,[keys.y]=21,[keys.u]=22,[keys.i]=23,[keys.o]=24,[keys.p]=25,[keys.leftBracket]=26,[keys.rightBracket]=27,[keys.enter]=28,[keys.leftCtrl]=29,[keys.a]=30,[keys.s]=31,[keys.d]=32,[keys.f]=33,[keys.g]=34,[keys.h]=35,[keys.j]=36,[keys.k]=37,[keys.l]=38,[keys.semicolon or keys.semiColon]=39,[keys.apostrophe]=40,[keys.grave]=41,[keys.leftShift]=42,[keys.backslash]=43,[keys.z]=44,[keys.x]=45,[keys.c]=46,[keys.v]=47,[keys.b]=48,[keys.n]=49,[keys.m]=50,[keys.comma]=51,[keys.period]=52,[keys.slash]=53,[keys.rightShift]=54,[keys.leftAlt]=56,[keys.space]=57,[keys.capsLock]=58,[keys.f1]=59,[keys.f2]=60,[keys.f3]=61,[keys.f4]=62,[keys.f5]=63,[keys.f6]=64,[keys.f7]=65,[keys.f8]=66,[keys.f9]=67,[keys.f10]=68,[keys.numLock]=69,[keys.scollLock or keys.scrollLock]=70,[keys.numPad7]=71,[keys.numPad8]=72,[keys.numPad9]=73,[keys.numPadSubtract]=74,[keys.numPad4]=75,[keys.numPad5]=76,[keys.numPad6]=77,[keys.numPadAdd]=78,[keys.numPad1]=79,[keys.numPad2]=80,[keys.numPad3]=81,[keys.numPad0]=82,[keys.numPadDecimal]=83,[keys.f11]=87,[keys.f12]=88,[keys.f13]=100,[keys.f14]=101,[keys.f15]=102,[keys.numPadEquals or keys.numPadEqual]=141,[keys.numPadEnter]=156,[keys.rightCtrl]=157,[keys.rightAlt]=184,[keys.pause]=197,[keys.home]=199,[keys.up]=200,[keys.pageUp]=201,[keys.left]=203,[keys.right]=205,[keys["end"]]=207,[keys.down]=208,[keys.pageDown]=209,[keys.insert]=210,[keys.delete]=211}local function g(h)local i;if _CC_VERSION then i=h<=_CC_VERSION elseif not _HOST then i=h<=os.version():gsub("CraftOS ","")else i=h<=_HOST:match("ComputerCraft ([0-9%.]+)")end;assert(i,"This program requires ComputerCraft "..h.." or later.")end;local function j(k)local l=""for m in k:gmatch"..."do local n=m:byte(1)*65536+m:byte(2)*256+m:byte(3)local o,p,q,r=bit32.extract(n,18,6),bit32.extract(n,12,6),bit32.extract(n,6,6),bit32.extract(n,0,6)l=l..d:sub(o+1,o+1)..d:sub(p+1,p+1)..d:sub(q+1,q+1)..d:sub(r+1,r+1)end;if#k%3==1 then local n=k:byte(-1)local o,p=bit32.rshift(n,2),bit32.lshift(bit32.band(n,3),4)l=l..d:sub(o+1,o+1)..d:sub(p+1,p+1).."=="elseif#k%3==2 then local n=k:byte(-2)*256+k:byte(-1)local o,p,q,r=bit32.extract(n,10,6),bit32.extract(n,4,6),bit32.lshift(bit32.extract(n,0,4),2)l=l..d:sub(o+1,o+1)..d:sub(p+1,p+1)..d:sub(q+1,q+1).."="end;return l end;local function s(k)local l=""for m in k:gmatch"...."do if m:sub(3,4)=='=='then l=l..string.char(bit32.bor(bit32.lshift(d:find(m:sub(1,1))-1,2),bit32.rshift(d:find(m:sub(2,2))-1,4)))elseif m:sub(4,4)=='='then local n=(d:find(m:sub(1,1))-1)*4096+(d:find(m:sub(2,2))-1)*64+d:find(m:sub(3,3))-1;l=l..string.char(bit32.extract(n,10,8))..string.char(bit32.extract(n,2,8))else local n=(d:find(m:sub(1,1))-1)*262144+(d:find(m:sub(2,2))-1)*4096+(d:find(m:sub(3,3))-1)*64+d:find(m:sub(4,4))-1;l=l..string.char(bit32.extract(n,16,8))..string.char(bit32.extract(n,8,8))..string.char(bit32.extract(n,0,8))end end;return l end;local t;local function u(k)if not t then t={}for v=0,0xFF do local w=v;for x=1,8 do if bit32.band(w,1)==1 then w=bit32.rshift(w,1)w=bit32.bxor(w,0xEDB88320)else w=bit32.rshift(w,1)end end;t[v]=w end end;local y=0xFFFFFFFF;for z=1,#k do y=bit32.bxor(bit32.rshift(y,8),t[bit32.bxor(bit32.band(y,0xFF),k:byte(z))])end;return bit32.bxor(y,0xFFFFFFFF)end;local function A(B,C)local D=B:byte(C)C=C+1;local E;if D==0 then E="<j"elseif D==1 then E="<n"elseif D==2 then E="<B"elseif D==3 then E="<z"elseif D==4 then local F,keys={},{}local G=B:byte(C)C=C+1;for v=1,G do keys[v],C=A(B,C)end;for v=1,G do F[keys[v]],C=A(B,C)end;return F,C else return nil,C end;local r=string.unpack(E,B,C)if D==2 then r=r~=0 end;C=C+string.packsize(E)return r,C end;local function H(I)if type(I)=="number"then if I%1==0 and I>=-0x80000000 and I<0x80000000 then return string.pack("<Bj",0,I)else return string.pack("<Bn",1,I)end elseif type(I)=="boolean"then return string.pack("<BB",2,I and 1 or 0)elseif type(I)=="string"then return string.pack("<Bz",3,I)elseif type(I)=="nil"then return"\5"elseif type(I)=="table"then local keys,J={},{}local v=1;for K,L in pairs(I)do keys[v],J[v],v=K,L,v+1 end;local m=string.pack("<BB",4,v-1)for x=1,v-1 do m=m..H(keys[x])end;for x=1,v-1 do m=m..H(J[x])end;return m else error("Cannot encode type "..type(I))end end;local M={[0]="mouse_click","mouse_up","mouse_scroll","mouse_drag"}local N={[0]=fs.exists,fs.isDir,fs.isReadOnly,fs.getSize,fs.getDrive,fs.getCapacity,fs.getFreeSpace,fs.list,fs.attributes,fs.find,fs.makeDir,fs.delete,fs.copy,fs.move,function()end,function()end}local O={[0]="r","w","r","a","rb","wb","rb","ab"}local P={key=true,key_up=true,char=true,mouse_click=true,mouse_up=true,mouse_drag=true,mouse_scroll=true,mouse_move=true,term_resize=true,paste=true}if not string.pack then g"1.91.0"end;function c.server(Q,R,S,T,U,V,z,W,X,Y)a(1,Q,"table")a(2,R,"number")a(3,S,"number")a(4,T,"number","nil")a(5,U,"string","nil")a(6,V,"table","nil")a(7,z,"number","nil")a(8,W,"number","nil")a.field(Q,"send","function")a.field(Q,"receive","function")a.field(Q,"close","function","nil")U=U or"CraftOS Raw Terminal"z=z or 1;W=W or 1;local Z,_,a0,a1,a2,a3,a4,a5,a6={},0,1,1,0xF0,true,false,false,true;local a7,a8,a9,aa,ab={},{},{},{},{}local ac=Q.flags or{isVersion11=false,filesystem=false,binaryChecksum=false}Q.flags=ac;for v=1,S do a7[v],a8[v]=(" "):rep(R),("\xF0"):rep(R)end;for v=1,S*9 do a9[v]=("\x0F"):rep(R*6)end;for v=0,15 do aa[v]={(V or term).getPaletteColor(2^v)}end;for v=16,255 do aa[v]={0,0,0}end;local function ad(type,T,B)local ae=j(string.char(type)..string.char(T or 0)..B)local r;if#ae>65535 and ac.isVersion11 then r="!CPD"..string.format("%012X",#ae)else r="!CPC"..string.format("%04X",#ae)end;r=r..ae;if ac.binaryChecksum and T~=6 then r=r..("%08X"):format(u(string.char(type)..string.char(T or 0)..B))else r=r..("%08X"):format(u(ae))end;return r.."\n"end;function Z.write(af)af=tostring(af)a(1,af,"string")if a1<1 or a1>S then return elseif a0>R or a0+#af<1 then a0=a0+#af;return elseif a0<1 then af=af:sub(-a0+2)a0=1 end;local ag=#af;if a0+#af>R then af=af:sub(1,R-a0+1)end;a7[a1]=a7[a1]:sub(1,a0-1)..af..a7[a1]:sub(a0+#af)a8[a1]=a8[a1]:sub(1,a0-1)..string.char(a2):rep(#af)..a8[a1]:sub(a0+#af)a0=a0+ag;a6=true;Z.redraw()end;function Z.blit(af,ah,ai)af=tostring(af)a(1,af,"string")a(2,ah,"string")a(3,ai,"string")if#af~=#ah or#ah~=#ai then error("Arguments must be the same length",2)end;if a1<1 or a1>S then return elseif a0>R or a0<1-#af then a0=a0+#af;Z.redraw()return elseif a0<1 then af,ah,ai=af:sub(-a0+2),ah:sub(-a0+2),ai:sub(-a0+2)a0=1;Z.redraw()end;local ag=#af;if a0+#af>R then af,ah,ai=af:sub(1,R-a0+1),ah:sub(1,R-a0+1),ai:sub(1,R-a0+1)end;local aj=""for v=1,#af do aj=aj..string.char((tonumber(ai:sub(v,v),16)or 0)*16+(tonumber(ah:sub(v,v),16)or 0))end;a7[a1]=a7[a1]:sub(1,a0-1)..af..a7[a1]:sub(a0+#af)a8[a1]=a8[a1]:sub(1,a0-1)..aj..a8[a1]:sub(a0+#af)a0=a0+ag;a6=true;Z.redraw()end;function Z.clear()if _==0 then for v=1,S do a7[v],a8[v]=(" "):rep(R),string.char(a2):rep(R)end else for v=1,S*9 do a9[v]=("\x0F"):rep(R*6)end end;a6=true;Z.redraw()end;function Z.clearLine()if a1>=1 and a1<=S then a7[a1],a8[a1]=(" "):rep(R),string.char(a2):rep(R)a6=true;Z.redraw()end end;function Z.getCursorPos()return a0,a1 end;function Z.setCursorPos(ak,al)a(1,ak,"number")a(2,al,"number")if ak==a0 and al==a1 then return end;a0,a1=ak,al;a6=true;Z.redraw()end;function Z.getCursorBlink()return a4 end;function Z.setCursorBlink(p)a(1,p,"boolean")a4=p;if V then V.setCursorBlink(p)end;Z.redraw()end;function Z.isColor()if V then return V.isColor()end;return true end;function Z.getSize(am)if type(am)=="number"and am>1 or type(am)=="boolean"and am==true then return R*6,S*9 else return R,S end end;function Z.scroll(an)a(1,an,"number")if math.abs(an)>=R then for v=1,S do a7[v],a8[v]=(" "):rep(R),string.char(a2):rep(R)end elseif an>0 then for v=an+1,S do a7[v-an],a8[v-an]=a7[v],a8[v]end;for v=S-an+1,S do a7[v],a8[v]=(" "):rep(R),string.char(a2):rep(R)end elseif an<0 then for v=1,S+an do a7[v-an],a8[v-an]=a7[v],a8[v]end;for v=1,-an do a7[v],a8[v]=(" "):rep(R),string.char(a2):rep(R)end else return end;a6=true;Z.redraw()end;function Z.getTextColor()return 2^bit32.band(a2,0x0F)end;function Z.setTextColor(ao)a(1,ao,"number")a2=bit32.band(a2,0xF0)+bit32.band(math.floor(math.log(ao,2)),0x0F)end;function Z.getBackgroundColor()return 2^bit32.rshift(a2,4)end;function Z.setBackgroundColor(ao)a(1,ao,"number")a2=bit32.band(a2,0x0F)+bit32.band(math.floor(math.log(ao,2)),0x0F)*16 end;function Z.getPaletteColor(ao)a(1,ao,"number")if _==2 then if ao<0 or ao>255 then error("bad argument #1 (value out of range)",2)end else ao=bit32.band(math.floor(math.log(ao,2)),0x0F)end;return table.unpack(aa[ao])end;function Z.setPaletteColor(ao,ap,aq,p)a(1,ao,"number")a(2,ap,"number")a(3,aq,"number")a(4,p,"number")if ap<0 or ap>1 then error("bad argument #2 (value out of range)",2)end;if aq<0 or aq>1 then error("bad argument #3 (value out of range)",2)end;if p<0 or p>1 then error("bad argument #4 (value out of range)",2)end;if _==2 then if ao<0 or ao>255 then error("bad argument #1 (value out of range)",2)end else ao=bit32.band(math.floor(math.log(ao,2)),0x0F)end;aa[ao]={ap,aq,p}a6=true;Z.redraw()end;function Z.getGraphicsMode()if _==0 then return false else return _ end end;function Z.setGraphicsMode(am)a(1,am,"boolean","number")local ar=_;if am==false then _=0 elseif am==true then _=1 elseif am>=0 and am<=2 then _=math.floor(am)else error("bad argument #1 (invalid mode)",2)end;if _~=ar then a6=true;Z.redraw()end end;function Z.getPixel(as,at)a(1,as,"number")a(2,at,"number")if as<0 or as>=R*6 or at<0 or at>=S*9 then return nil end;local q=a9[at+1]:byte(as+1,as+1)return _==2 and q or 2^q end;function Z.setPixel(as,at,ao)a(1,as,"number")a(2,at,"number")a(3,ao,"number")if as<0 or as>=R*6 or at<0 or at>=S*9 then return nil end;if _==2 then if ao<0 or ao>255 then error("bad argument #3 (value out of range)",2)end else ao=bit32.band(math.floor(math.log(ao,2)),0x0F)end;a9[at+1]=a9[at+1]:sub(1,as)..string.char(ao)..a9[at+1]:sub(as+2)a6=true;Z.redraw()end;function Z.drawPixels(as,at,au,av,aw)a(1,as,"number")a(2,at,"number")a(3,au,"table","number")a(4,av,"number",type(au)~="number"and"nil"or nil)a(5,aw,"number",type(au)~="number"and"nil"or nil)if type(au)=="number"then if _==2 then if au<0 or au>255 then error("bad argument #3 (value out of range)",2)end else au=bit32.band(math.floor(math.log(au,2)),0x0F)end;for al=at+1,at+aw do a9[al]=a9[al]:sub(1,as)..string.char(au):rep(av)..a9[al]:sub(as+av+1)end else for al=at+1,at+(aw or#au)do local ax=au[al-at]if ax and a9[al]then if type(ax)=="string"then a9[al]=a9[al]:sub(1,as)..ax:sub(1,av or-1)..a9[al]:sub(as+(av or#ax)+1)elseif type(ax)=="table"then local k=""for ak=1,av or#ax do k=k..string.char(ax[ak]or a9[al]:byte(as+ak))end;a9[al]=a9[al]:sub(1,as)..k..a9[al]:sub(as+#k+1)end end end end;a6=true;Z.redraw()end;function Z.getPixels(as,at,av,aw,k)a(1,as,"number")a(2,at,"number")a(3,av,"number")a(4,aw,"number")a(5,k,"boolean","nil")local l={}for al=at+1,at+aw do if a9[al]then if k then l[al-at]=a9[al]:sub(as+1,as+av)else l[al-at]={a9[al]:byte(as+1,as+av)}if _<2 then for v=1,av do l[al-at][v]=2^l[al-at][v]end end end end end;return l end;Z.isColour=Z.isColor;Z.getTextColour=Z.getTextColor;Z.setTextColour=Z.setTextColor;Z.getBackgroundColour=Z.getBackgroundColor;Z.setBackgroundColour=Z.setBackgroundColor;Z.getPaletteColour=Z.getPaletteColor;Z.setPaletteColour=Z.setPaletteColor;function Z.getLine(al)if al<1 or al>S then return nil end;local ah,ai="",""for q in a8[al]:gmatch"."do ah,ai=ah..("%x"):format(bit32.band(q:byte(),0x0F)),ai..("%x"):format(bit32.rshift(q:byte(),4))end;return a7[al],ah,ai end;function Z.isVisible()return a3 end;function Z.setVisible(L)a(1,L,"boolean")a3=L;Z.redraw()end;function Z.redraw()if a3 and a6 then if V then if V.getGraphicsMode and(V.getGraphicsMode()or 0)~=_ then V.setGraphicsMode(_)end;if _==0 then local p=V.getCursorBlink()V.setCursorBlink(false)for al=1,S do V.setCursorPos(z,W+al-1)V.blit(Z.getLine(al))end;V.setCursorBlink(p)Z.restoreCursor()elseif V.drawPixels then V.drawPixels((z-1)*6,(W-1)*9,a9,R,S)end end;if not a5 then local ay=""if _==0 then local q,n=a7[1]:sub(1,1),0;for al=1,S do for az in a7[al]:gmatch"."do if az~=q or n==255 then ay=ay..q..string.char(n)q,n=az,0 end;n=n+1 end end;if n>0 then ay=ay..q..string.char(n)end;q,n=a8[1]:sub(1,1),0;for al=1,S do for az in a8[al]:gmatch"."do if az~=q or n==255 then ay=ay..q..string.char(n)q,n=az,0 end;n=n+1 end end;if n>0 then ay=ay..q..string.char(n)end else local q,n=a9[1]:sub(1,1),0;for al=1,S*9 do for az in a9[al]:gmatch"."do if az~=q or n==255 then ay=ay..q..string.char(n)q,n=az,0 end;n=n+1 end end end;for v=0,_==2 and 255 or 15 do ay=ay..string.char(aa[v][1]*255)..string.char(aa[v][2]*255)..string.char(aa[v][3]*255)end;Q:send(ad(0,T,string.pack("<BBHHHHBxxx",_,a4 and 1 or 0,R,S,math.min(math.max(a0-1,0),0xFFFFFFFF),math.min(math.max(a1-1,0),0xFFFFFFFF),V and(V.isColor()and 0 or 1)or 0)..ay))end;a6=false end end;function Z.restoreCursor()if V then V.setCursorPos(z+a0-1,W+a1-1)end end;function Z.getPosition()return z,W end;function Z.reposition(aA,aB,aC,aD,aE)a(1,aA,"number","nil")a(2,aB,"number","nil")a(3,aC,"number","nil")a(4,aD,"number","nil")a(5,aE,"table","nil")z,W,V=aA or z,aB or W,aE or V;local aF=aC and aC~=R or aD and aD~=S;if aC then if aC<R then for al=1,S do a7[al],a8[al]=a7[al]:sub(1,aC),a8[al]:sub(1,aC)for v=1,9 do a9[(al-1)*9+v]=a9[(al-1)*9+v]:sub(1,aC*6)end end elseif aC>R then for al=1,S do a7[al],a8[al]=a7[al]..(" "):rep(aC-R),a8[al]..string.char(a2):rep(aC-R)for v=1,9 do a9[(al-1)*9+v]=a9[(al-1)*9+v]..("\x0F"):rep((aC-R)*6)end end end;R=aC end;if aD then if aD<S then for al=aD+1,S do a7[al],a8[al]=nil;for v=1,9 do a9[(al-1)*9+v]=nil end end elseif aD>S then for al=S+1,aD do a7[al],a8[al]=(" "):rep(R),string.char(a2):rep(R)for v=1,9 do a9[(al-1)*9+v]=("\x0F"):rep(R*6)end end end;S=aD end;if aF and not a5 then Q:send(ad(4,T,string.pack("<BBHHz",0,Y and 0 or os.computerID()%256,R,S,U)))end;a6=true;Z.redraw()end;function Z.pullEvent(aG,aH,aI)a(1,aG,"string","nil")local aJ;parallel.waitForAny(function()if a5 then while true do coroutine.yield()end end;while true do local aK=Q:receive()if not aK then a5=true;error("Connection closed")end;if aK:sub(1,3)=="!CP"then local aL=8;if aK:sub(4,4)=='D'then aL=16 end;local aM=tonumber(aK:sub(5,aL),16)local ae=aK:sub(aL+1,aL+aM)local aN=tonumber(aK:sub(aL+aM+1,aL+aM+8),16)local B=s(ae)local aO,aP=B:byte(1,2)if u(ac.binaryChecksum and B or ae)==aN then if aP==T then if aO==1 then local az,ac=B:byte(3,4)if bit32.btest(ac,8)then aJ={"char",string.char(az)}elseif not bit32.btest(ac,1)then aJ={"key",e[az],bit32.btest(ac,2)}else aJ={"key_up",e[az]}end;if not aG or aJ[1]==aG then return else aJ=nil end elseif aO==2 then local aQ,aR,aS,aT=string.unpack("<BBII",B,3)aJ={M[aQ],aQ==2 and aR*2-1 or aR,aS,aT}if not aG or aJ[1]==aG then return else aJ=nil end elseif aO==3 then local aU,aV=string.unpack("<Bz",B,3)aJ={aV}local C=#aV+5;for v=2,aU+1 do aJ[v],C=A(B,C)end;if not aG or aJ[1]==aG then return else aJ=nil end elseif aO==4 then local ac,b,aW,aX=string.unpack("<BBHH",B,3)if ac==0 then if aW~=0 and aX~=0 then Z.reposition(nil,nil,aW,aX,nil)aJ={"term_resize"}end elseif ac==1 or ac==2 then Z.close()aJ={"win_close"}end;if not aG or aJ[1]==aG then return else aJ=nil end elseif aO==7 and ac.filesystem then local aY,aZ,a_,b0=string.unpack("<BBz",B,3)if aY==12 or aY==13 then b0=string.unpack("<z",B,b0)else b0=nil end;if bit32.band(aY,0xF0)==0 then local b1,I=pcall(N[aY],a_,b0)if b1 then if type(I)=="boolean"then Q:send(ad(8,T,string.pack("<BBB",aY,aZ,I and 1 or 0)))elseif type(I)=="number"then Q:send(ad(8,T,string.pack("<BBI4",aY,aZ,I)))elseif type(I)=="string"then Q:send(ad(8,T,string.pack("<BBz",aY,aZ,I)))elseif aY==8 then if I then Q:send(ad(8,T,string.pack("<BBI4I8I8BBBB",aY,aZ,I.size,I.created,I.modified,I.isDir and 1 or 0,I.isReadOnly and 1 or 0,0,0)))else Q:send(ad(8,T,string.pack("<BBI4I8I8BBBB",aY,aZ,0,0,0,0,0,1,0)))end elseif type(I)=="table"then local b2=""for v=1,#I do b2=b2 ..I[v].."\0"end;Q:send(ad(8,T,string.pack("<BBI4",aY,aZ,#I)..b2))else Q:send(ad(8,T,string.pack("<BBB",aY,aZ,0)))end else if aY==0 or aY==1 or aY==2 then Q:send(ad(8,T,string.pack("<BBB",aY,aZ,2)))elseif aY==3 or aY==5 or aY==6 then Q:send(ad(8,T,string.pack("<BBI4",aY,aZ,0xFFFFFFFF)))elseif aY==4 or aY==7 or aY==9 then Q:send(ad(8,T,string.pack("<BBz",aY,aZ,"")))elseif aY==8 then Q:send(ad(8,T,string.pack("<BBI4I8I8BBBB",aY,aZ,0,0,0,0,0,2,0)))else Q:send(ad(8,T,string.pack("<BBz",aY,aZ,I)))end end elseif bit32.band(aY,0xF0)==0x10 then local b3,b4=fs.open(a_,O[bit32.band(aY,7)])if b3 then if bit32.btest(aY,1)then ab[aZ]=b3 else Q:send(ad(9,T,string.pack("<BBs4",0,aZ,b3.readAll()or"")))b3.close()end else if bit32.btest(aY,1)then Q:send(ad(8,T,string.pack("<BBz",aY,aZ,b4)))else Q:send(ad(9,T,string.pack("<BBs4",1,aZ,b4)))end end end elseif aO==9 and ac.filesystem then local b,aZ,aM=string.unpack("<BBI4",B,3)local k=B:sub(9,aM+8)if ab[aZ]~=nil then ab[aZ].write(k)ab[aZ].close()ab[aZ]=nil;Q:send(ad(8,T,string.pack("<BBB",17,aZ,0)))else Q:send(ad(8,T,string.pack("<BBz",17,aZ,"Unknown request ID")))end end end end;if aO==6 then ac.isVersion11=true;local b5=string.unpack("<H",B,3)if aP==T then Q:send(ad(6,aP,string.pack("<H",1+(X and 0 or 2))))end;if bit32.btest(b5,0x01)then ac.binaryChecksum=true end;if bit32.btest(b5,0x02)and not X then ac.filesystem=true end;if bit32.btest(b5,0x04)then Q:send(ad(4,T,string.pack("<BBHHz",0,Y and 0 or os.computerID()%256,R,S,U)))a6=true end end end end end,function()if aI then while true do coroutine.yield()end end;repeat aJ=nil;aJ=table.pack(os.pullEventRaw(aG))until not aH or not P[aJ[1]]end)return table.unpack(aJ,1,aJ.n or#aJ)end;function Z.setTitle(F)a(1,U,"string")U=F;if a5 then return end;Q:send(ad(4,T,string.pack("<BBHHz",0,Y and 0 or os.computerID()%256,R,S,U)))end;function Z.sendMessage(type,U,b6)a(1,U,"string")a(2,b6,"string")a(3,type,"string","nil")if a5 then return end;local ac=0;if type=="error"then type=0x10 elseif type=="warning"then type=0x20 elseif type=="info"then type=0x40 elseif type then error("bad argument #3 (invalid type '"..type.."')",2)end;Q:send(ad(5,T,string.pack("<Izz",ac,U,b6)))end;function Z.close(b7)if a5 then return end;Q:send(ad(4,T,string.pack("<BBHHz",b7 and 1 or 2,0,0,0,"")))if Q.close and not b7 then Q:close()end;a5=true end;if V then for K,L in pairs(V)do if Z[K]==nil then Z[K]=L end end end;Q:send(ad(4,T,string.pack("<BBHHz",0,Y and 0 or os.computerID()%256,R,S,U)))return Z end;function c.client(Q,T,b8)a(1,Q,"table")a(2,T,"number")a(3,b8,"table","nil")a.field(Q,"send","function")a.field(Q,"receive","function")a.field(Q,"close","function","nil")a.field(Q,"setTitle","function","nil")a.field(Q,"showMessage","function","nil")a.field(Q,"windowNotification","function","nil")local b9={}local ac={isVersion11=false,binaryChecksum=false,filesystem=false}local a5=false;local ba=0;local function ad(type,T,B)local ae=j(string.char(type)..string.char(T or 0)..B)local r;if#B>65535 and ac.isVersion11 then r="!CPD"..string.format("%012X",#ae)else r="!CPC"..string.format("%04X",#ae)end;r=r..ae;if ac.binaryChecksum then r=r..("%08X"):format(u(string.char(type)..string.char(T or 0)..B))else r=r..("%08X"):format(u(ae))end;return r.."\n"end;local function bb(bc,type,bd)local b5=function(a_,b0)a(1,a_,"string")if bd then a(2,a_,"string")end;local n=ba;Q:send(ad(7,T,string.pack(bd and"<BBzz"or"<BBz",bc,n,a_,b0)))ba=(ba+1)%256;local B;while not B or B:byte(4)~=n do B=b9.update(Q:receive())end;if type=="nil"then local L=string.unpack("z",B,5)if L~=""then error(L,2)else return end elseif type=="boolean"then local L=B:byte(5)if L==2 then error("Failure",2)else return L~=0 end elseif type=="number"then local L=string.unpack("<I4",B,5)if L==0xFFFFFFFF then error("Failure",2)else return L end elseif type=="string"then local L=string.unpack("<I4",B,5)if L==""then error("Failure",2)else return L end elseif type=="table"then local aM=string.unpack("<I4",B,5)if aM==0xFFFFFFFF then error("Failure",2)end;local l,C={},9;for v=1,aM do l[v],C=string.unpack("z",B,C)end;return l elseif type=="attributes"then local be,b4={}be.size,be.created,be.modified,be.isDir,be.isReadOnly,b4=string.unpack("<I4I8I8BBB",B,5)if b4==1 then return nil elseif b4==2 then error("Failure",2)else return be end end end;if bd then return b5 else return function(a_)return b5(a_)end end end;local bf={exists=bb(0,"boolean"),isDir=bb(1,"boolean"),isReadOnly=bb(2,"boolean"),getSize=bb(3,"number"),getDrive=bb(4,"string"),getCapacity=bb(5,"number"),getFreeSpace=bb(6,"number"),list=bb(7,"table"),attributes=bb(8,"attributes"),find=bb(9,"table"),makeDir=bb(10,"nil"),delete=bb(11,"nil"),copy=bb(12,"nil",true),move=bb(13,"nil",true),open=function(a_,_)a(1,a_,"string")a(2,_,"string")local am;for v=0,7 do if O[v]==_ then am=v;break end end;if not am then error("Invalid mode",2)end;if bit32.btest(am,1)then local bg,bh="",false;return{write=function(r)if bh then error("attempt to use closed file",2)end;if bit32.btest(am,4)and type(r)=="number"then bg=bg..string.char(r)else bg=bg..tostring(r)end end,writeLine=function(r)if bh then error("attempt to use closed file",2)end;bg=bg..tostring(r).."\n"end,flush=function()if bh then error("attempt to use closed file",2)end;local n=ba;Q:send(ad(7,T,string.pack("<BBz",16+am,n,a_)))Q:send(ad(9,T,string.pack("<BBs4",0,n,bg)))ba=(ba+1)%256;bg,am="",bit32.bor(am,2)local r;while not r or r:byte(4)~=n do r=b9.update(Q:receive())end;local L=string.unpack("z",r,5)if L~=""then error(L,2)end end,close=function()if bh then error("attempt to use closed file",2)end;bh=true;local n=ba;Q:send(ad(7,T,string.pack("<BBz",16+am,n,a_)))Q:send(ad(9,T,string.pack("<BBs4",0,n,bg)))ba=(ba+1)%256;bg,am="",bit32.bor(am,2)local r;while not r or r:byte(4)~=n do r=b9.update(Q:receive())end;local L=string.unpack("z",r,5)if L~=""then error(L,2)end end}else local n=ba;Q:send(ad(7,T,string.pack("<BBz",16+am,n,a_)))ba=(ba+1)%256;local r;while not r or r:byte(4)~=n do r=b9.update(Q:receive())end;local aM=string.unpack("<I4",r,5)local B=r:sub(9,8+aM)if r:byte(3)~=0 then return nil,B end;local C,bh=1,false;return{read=function(n)a(1,n,"number","nil")if bh then error("attempt to use closed file",2)end;if C>=#B then return nil end;if n==nil then if bit32.btest(am,4)then C=C+1;return B:byte(C-1)else n=1 end end;C=C+n;return B:sub(C-n,C-1)end,readLine=function(bi)if bh then error("attempt to use closed file",2)end;if C>=#B then return nil end;local bj,bk=C;bk,C=B:match("([^\n]"..(bi and"+)\n"or"*\n)").."()",C)if not C then bk=B:sub(C)C=#B end;return bk end,readAll=function()if bh then error("attempt to use closed file",2)end;if C>=#B then return nil end;local r=B:sub(C)C=#B;return r end,close=function()if bh then error("attempt to use closed file",2)end;bh=true end,seek=bit32.btest(am,4)and function(bl,bm)a(1,bl,"string","nil")a(2,bm,"number","nil")bl=bl or"cur"bm=bm or 0;if bh then error("attempt to use closed file",2)end;if bl=="set"then C=bm elseif bl=="cur"then C=C+bm elseif bl=="end"then C=#B-bm else error("Invalid whence",2)end;return C end or nil}end end}function b9.update(b6)a(1,b6,"string")if b6:sub(1,3)=="!CP"then local aL=8;if b6:sub(4,4)=='D'then aL=16 end;local aM=tonumber(b6:sub(5,aL),16)local ae=b6:sub(aL+1,aL+aM)local aN=tonumber(b6:sub(aL+aM+1,aL+aM+8),16)local B=s(ae)if u(ac.binaryChecksum and B or ae)==aN then local aO,aP=B:byte(1,2)if aP==T then if aO==0 and b8 then local _,bn,R,S,a0,a1,bo=string.unpack("<BBHHHHB",B,3)local q,n,C=string.unpack("c1B",B,17)b8.setCursorBlink(false)if b8.setVisible then b8.setVisible(false)end;if b8.getGraphicsMode and b8.getGraphicsMode()~=_ then b8.setGraphicsMode(_)end;b8.clear()if _==0 then local af={}for W=1,S do af[W]=""for z=1,R do af[W]=af[W]..q;n=n-1;if n==0 then q,n,C=string.unpack("c1B",B,C)end end end;q=q:byte()for W=1,S do local ah,ai="",""for z=1,R do ah,ai=ah..("%x"):format(bit32.band(q,0x0F)),ai..("%x"):format(bit32.rshift(q,4))n=n-1;if n==0 then q,n,C=string.unpack("BB",B,C)end end;b8.setCursorPos(1,W)b8.blit(af[W],ah,ai)end else local a9={}for W=1,S*9 do a9[W]=""for z=1,R*6 do a9[W]=a9[W]..q;n=n-1;if n==0 then q,n,C=string.unpack("c1B",B,C)end end end;if b8.drawPixels then b8.drawPixels(0,0,a9)end end;C=C-2;local ap,aq,p;if _~=2 then for v=0,15 do ap,aq,p,C=string.unpack("BBB",B,C)b8.setPaletteColor(2^v,ap/255,aq/255,p/255)end else for v=0,255 do ap,aq,p,C=string.unpack("BBB",B,C)b8.setPaletteColor(v,ap/255,aq/255,p/255)end end;b8.setCursorBlink(bn~=0)b8.setCursorPos(a0+1,a1+1)if b8.setVisible then b8.setVisible(true)end elseif aO==4 then local ac,b,aW,aX,U=string.unpack("<BBHHz",B,3)if ac==0 then if aW~=0 and aX~=0 and b8 and b8.reposition then local z,W=b8.getPosition()b8.reposition(z,W,aW,aX)end;if Q.setTitle then Q:setTitle(U)end elseif ac==1 or ac==2 then if not a5 then Q:send("\n")if Q.close then Q:close()end;a5=true end end elseif aO==5 then local ac,U,aK=string.unpack("<Izz",B,3)local bp;if bit32.btest(ac,0x10)then bp="error"elseif bit32.btest(ac,0x20)then bp="warning"elseif bit32.btest(ac,0x40)then bp="info"end;if Q.showMessage then Q:showMessage(bp,U,aK)end elseif aO==8 or aO==9 then return B end elseif aO==4 then local ac,b,aW,aX,U=string.unpack("<BBHHz",B,3)if ac==0 and Q.windowNotification then Q:windowNotification(aP,aW,aX,U)end end;if aO==6 then ac.isVersion11=true;local b5=string.unpack("<H",B,3)if bit32.btest(b5,0x01)then ac.binaryChecksum=true end;if bit32.btest(b5,0x02)then ac.filesystem=true;b9.fs=bf end end end end end;function b9.queueEvent(aJ,...)a(1,aJ,"string")if a5 then return end;local bq=table.pack(...)if aJ=="key"then Q:send(ad(1,T,string.pack("<BB",f[bq[1]],bq[2]and 2 or 0)))elseif aJ=="key_up"then Q:send(ad(1,T,string.pack("<BB",f[bq[1]],1)))elseif aJ=="char"then Q:send(ad(1,T,string.pack("<BB",bq[1]:byte(),9)))elseif aJ=="mouse_click"then Q:send(ad(2,T,string.pack("<BBII",0,bq[1],bq[2],bq[3])))elseif aJ=="mouse_up"then Q:send(ad(2,T,string.pack("<BBII",1,bq[1],bq[2],bq[3])))elseif aJ=="mouse_scroll"then Q:send(ad(2,T,string.pack("<BBII",2,bq[1]<0 and 0 or 1,bq[2],bq[3])))elseif aJ=="mouse_drag"then Q:send(ad(2,T,string.pack("<BBII",3,bq[1],bq[2],bq[3])))elseif aJ=="term_resize"then if b8 then local aW,aX=b8.getSize()Q:send(ad(4,T,string.pack("<BBHHz",0,0,aW,aX,"")))end else local m=""for v=1,bq.n do m=m..H(bq[v])end;Q:send(ad(3,T,string.pack("<Bz",bq.n,aJ)..m))end end;function b9.resize(aW,aX)a(1,aW,"number")a(2,aX,"number")if b8 and b8.reposition then local z,W=b8.getPosition()b8.reposition(z,W,aW,aX)end;if a5 then return end;Q:send(ad(4,T,string.pack("<BBHHz",0,0,aW,aX,"")))end;function b9.close()if a5 then return end;Q:send(ad(4,T,string.pack("<BBHHz",1,0,0,0,"")))Q:send("\n")if Q.close then Q:close()end;a5=true end;function b9.run()parallel.waitForAny(function()while not a5 do local aK=Q:receive()if aK==nil then a5=true else b9.update(aK)end end end,function()while true do local aJ=table.pack(os.pullEventRaw())if aJ[1]=="key"or aJ[1]=="key_up"or aJ[1]=="char"or aJ[1]=="mouse_click"or aJ[1]=="mouse_up"or aJ[1]=="mouse_scroll"or aJ[1]=="mouse_drag"or aJ[1]=="paste"or aJ[1]=="terminate"or aJ[1]=="term_resize"then b9.queueEvent(table.unpack(aJ,1,aJ.n))end end end)end;b9.fs=nil;Q:send(ad(6,T,string.pack("<H",7)))return b9 end;local br,bs={},{}br.__index,bs.__index=br,bs;function br:send(B)return self._ws.send(B)end;function br:receive(bt)return self._ws.receive(bt)end;function br:close()return self._ws.close()end;function bs:send(B)return rednet.send(self._id,B,self._protocol)end;function bs:receive(bt)local bu=os.startTimer(bt)repeat local aJ={os.pullEvent()}if aJ[1]=="rednet_message"and aJ[2]==self._id and(not self._protocol or aJ[4]==self._protocol)then os.cancelTimer(bu)return aJ[3]end until aJ[1]=="timer"and aJ[2]==bu end;function c.wsDelegate(bv,bw)a(1,bv,"string")a(2,bw,"table","nil")local bx,b4=http.websocket(bv,bw)if not bx then return nil,b4 end;return setmetatable({_ws=bx},br)end;function c.rednetDelegate(T,by)a(1,T,"number")a(2,by,"string","nil")return setmetatable({_id=T,_protocol=by or"ccpc_raw_terminal"},bs)end;return c